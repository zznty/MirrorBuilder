on:
    workflow_dispatch:
      inputs:
        force:
          description: 'Force build of all jobs'
          required: false
          default: 'false'
    schedule:
      - cron: 0 0 * * MON

env:
  LAUNCHER_VERSION: 5.6.x
  GH_TOKEN: ${{ github.token }}

name: Build Mirror Clients

jobs:
    build-client:
        runs-on: ubuntu-latest
        name: Build Client
        strategy:
            matrix:
                version: ["1.16.5", "1.18.2", "1.19.2", "1.19.4", "1.20.1"]
                component: ["net.minecraftforge", "net.fabricmc.fabric-loader"]
                lwjgl3: [false]
                exclude:
                  - version: "1.7.10"
                    component: "net.fabricmc.fabric-loader"
                  - version: "1.12.2"
                    component: "net.fabricmc.fabric-loader"
                include:
                  - version: "1.7.10"
                    component: "net.minecraftforge"
                    lwjgl3: true
                  - version: "1.12.2"
                    component: "net.minecraftforge"
                    lwjgl3: true

        steps:
            - uses: actions/checkout@v3

            - uses: actions/setup-java@v4
              name: Setup Java 17
              with:
                java-version: '17'
                distribution: 'temurin'

            - name: Download InstallUtil
              shell: pwsh
              run: |
                Invoke-RestMethod "https://mirror.zznty.ru/installutil/installutil" -OutFile "installutil"
                chmod +x installutil

            - name: Create component directory
              shell: pwsh
              run: New-Item -Type Directory -Force component

            - name: Download MMC patches
              if : ${{ matrix.lwjgl3 }}
              shell: pwsh
              run: |
                if ("${{ matrix.version }}" -eq "1.7.10") {
                  $tag = gh release -R "GTNewHorizons/lwjgl3ify" list -L 1 --json tagName | ConvertFrom-Json | Select-Object -ExpandProperty tagName

                  Invoke-RestMethod "https://github.com/GTNewHorizons/lwjgl3ify/releases/download/$tag/lwjgl3ify-$tag-multimc.zip" -OutFile "component/mmc.zip"
                }
                elseif ("${{ matrix.version }}" -eq "1.12.2") {
                  $tag = gh release -R "CleanroomMC/Cleanroom" list -L 1 --json tagName | ConvertFrom-Json | Select-Object -ExpandProperty tagName

                  Invoke-RestMethod "https://github.com/CleanroomMC/Cleanroom/releases/download/$tag/Cleanroom-MMC-instance-$tag.zip" -OutFile "component/mmc.zip"
                }
                else {
                  Write-Error "Unsupported version ${{ matrix.version }}"
                  exit 1
                }

            - name: Get Latest Component Version
              id: meta
              working-directory: component
              shell: pwsh
              run: |
                if ("${{ matrix.lwjgl3 }}" -eq "true") {
                  # Workaround for 1.7.10, lwjgl3ify patches are not using forge uid
                  $componentUid = "${{ matrix.version }}" -eq "1.7.10" ? "me.eigenraven.lwjgl3ify.forgepatches" : "${{ matrix.component }}"

                  $version = ../installutil component meta $componentUid --meta "mmc://$(Resolve-Path 'mmc.zip')"
                }
                elseif ("${{ matrix.component }}" -eq "net.minecraftforge" -and "${{ matrix.version }}" -eq "1.16.5") {
                  $version = "36.2.41" # https://github.com/RetroForge/MinecraftForge/releases/tag/36.2.41-1.16.5-patched1
                }
                else {
                  $version = ../installutil component meta "${{ matrix.component }}" net.minecraft==${{ matrix.version }}
                }

                "version=$version" >> $env:GITHUB_OUTPUT

            - name: Get version suffix
              id: suffix
              shell: pwsh
              run: |
                $value = "${{ matrix.component }}" -eq "net.minecraftforge" ? "forge" : "fabric"

                if ("${{ matrix.lwjgl3 }}" -eq "true") {
                  $value += "-lwjgl3" 
                }

                "value=$value" >> $env:GITHUB_OUTPUT

            - name: Get Mirror Component Version
              id: mirror
              shell: pwsh
              run: |
                $component = "${{ matrix.component }}"

                # Workaround for 1.7.10, lwjgl3ify patches are not using forge uid
                if ("${{ matrix.lwjgl3 }}" -eq "true" -and "${{ matrix.version }}" -eq "1.7.10") {
                  $component = "me.eigenraven.lwjgl3ify.forgepatches"
                }

                if ("${{ inputs.force }}" -eq "true") {
                  $version = $null
                }
                else {
                  $version = ./installutil component profile $component "${{ secrets.S3_ENDPOINT }}/${{ secrets.S3_BUCKET }}/${{ env.LAUNCHER_VERSION }}/clients/${{ matrix.version }}-${{ steps.suffix.outputs.value }}.json" legacy
                }

                "version=$version" >> $env:GITHUB_OUTPUT

            - name: Install Component
              if: ${{ steps.meta.outputs.version != steps.mirror.outputs.version }}
              shell: pwsh
              working-directory: component
              run: |                
                if (Test-Path mmc.zip) {
                    ../installutil install ${{ matrix.component }} --meta "mmc://$(Resolve-Path 'mmc.zip')" --mirror "https://mirror.gravitlauncher.com/${{ env.LAUNCHER_VERSION }}/"
                }
                else {
                    ../installutil install ${{ matrix.component }} net.minecraft==${{ matrix.version }} --mirror "https://mirror.gravitlauncher.com/${{ env.LAUNCHER_VERSION }}/"
                }

            - name: Download recommended mods for 1.7.10-lwjgl3ify
              if: ${{ steps.meta.outputs.version != steps.mirror.outputs.version && matrix.lwjgl3 && matrix.version == '1.7.10' }}
              shell: pwsh
              working-directory: component/mods
              run: |
                # lwjgl3ify mod
                $tag = gh release -R "GTNewHorizons/lwjgl3ify" list -L 1 --json tagName | ConvertFrom-Json | Select-Object -ExpandProperty tagName
                curl -sLO "https://github.com/GTNewHorizons/lwjgl3ify/releases/download/$tag/lwjgl3ify-$tag.jar"

                # UniMixins mod
                $tag = gh release -R "LegacyModdingMC/UniMixins" list -L 1 --json tagName | ConvertFrom-Json | Select-Object -ExpandProperty tagName
                curl -sLO "https://github.com/LegacyModdingMC/UniMixins/releases/download/$tag/+unimixins-all-1.7.10-$tag.jar"

                # Hodgepodge mod (compat)
                $tag = gh release -R "GTNewHorizons/Hodgepodge" list -L 1 --json tagName | ConvertFrom-Json | Select-Object -ExpandProperty tagName
                curl -sLO "https://github.com/GTNewHorizons/Hodgepodge/releases/download/$tag/hodgepodge-$tag.jar"
                
                # GTNHLib mod
                $tag = gh release -R "GTNewHorizons/GTNHLib" list -L 1 --json tagName | ConvertFrom-Json | Select-Object -ExpandProperty tagName
                curl -sLO "https://github.com/GTNewHorizons/GTNHLib/releases/download/$tag/gtnhlib-$tag.jar"

            - name: Download recommended mods for 1.12.2-cleanroom
              if: ${{ steps.meta.outputs.version != steps.mirror.outputs.version && matrix.lwjgl3 && matrix.version == '1.12.2' }}
              shell: pwsh
              working-directory: component/mods
              run: |
                # Fugue mod (compat)
                $tag = gh release -R "CleanroomMC/Fugue" list -L 1 --json tagName | ConvertFrom-Json | Select-Object -ExpandProperty tagName
                curl -sLO "https://github.com/CleanroomMC/Fugue/releases/download/$tag/+Fugue-1.12.2-$tag.jar"
            
            - name: Build files to upload
              if: ${{ steps.meta.outputs.version != steps.mirror.outputs.version }}
              working-directory: component
              run: |
                rm -rf mmc
                rm -f mmc.zip
                mv "profile.json" "${{ matrix.version }}-${{ steps.suffix.outputs.value }}.json"
                7z a -sdel "${{ matrix.version }}-${{ steps.suffix.outputs.value }}.zip" libraries/ mods/ natives/
            
            - name: Upload profile
              if: ${{ steps.meta.outputs.version != steps.mirror.outputs.version }}
              working-directory: component
              run: aws s3 --endpoint-url=${{ secrets.S3_ENDPOINT }} sync . s3://${{ secrets.S3_BUCKET }}/${{ env.LAUNCHER_VERSION }}/clients/
              env:
                AWS_ACCESS_KEY_ID: ${{ secrets.S3_KEY_ID }}
                AWS_SECRET_ACCESS_KEY: ${{ secrets.S3_KEY }}
                AWS_DEFAULT_REGION: ru-central1
